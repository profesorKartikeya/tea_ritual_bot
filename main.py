# aiogram v2 ‚Äî –ø—Ä–æ—Å—Ç–∏–π —Å—Ç–∞—Ä—Ç
import logging, os
from aiogram import Bot, Dispatcher, types
from aiogram.utils import executor

logging.basicConfig(level=logging.INFO)

BOT_TOKEN = os.getenv("BOT_TOKEN")  # –¥–æ–¥–∞–º–æ –Ω–∞ Render —è–∫ env var
if not BOT_TOKEN:
    raise RuntimeError("Set BOT_TOKEN env var")

bot = Bot(token=BOT_TOKEN)
dp = Dispatcher(bot)

# --- –ú–µ–Ω—é ---
main_menu = types.ReplyKeyboardMarkup(resize_keyboard=True)
main_menu.add("1. –ó–∞–±—Ä–æ–Ω—é–≤–∞—Ç–∏ —á–∞—Å")
main_menu.add("2. –ü—Ä–∏–¥–±–∞—Ç–∏ —á–∞–π")
main_menu.add("3. –ê–Ω–æ–Ω—Å –ø–æ–¥—ñ–π")
main_menu.add("4. –©–æ —Ç–∞–∫–µ —á–∞–π–Ω–∏–π –¥—ñ–º")

tea_menu = types.ReplyKeyboardMarkup(resize_keyboard=True)
tea_menu.add("–ë—ñ–ª–∏–π", "–ó–µ–ª–µ–Ω–∏–π")
tea_menu.add("–ß–µ—Ä–≤–æ–Ω–∏–π", "–£–ª—É–Ω")
tea_menu.add("–ß–æ—Ä–Ω–∏–π (–ø—É-–µ—Ä)", "–ú–∞–≥—ñ—á–Ω—ñ –∫—É–ø–∞–∂—ñ")
tea_menu.add("‚¨ÖÔ∏è –ù–∞–∑–∞–¥")

# --- –û–±—Ä–æ–±–Ω–∏–∫–∏ ---
@dp.message_handler(commands=['start'])
async def start(message: types.Message):
    await message.answer("–í—ñ—Ç–∞—é —É —á–∞–π–Ω–æ–º—É –¥–æ–º—ñ ¬´–†–∏—Ç—É–∞–ª¬ª! üåø\n–û–±–µ—Ä–∏ –¥—ñ—é:", reply_markup=main_menu)

@dp.message_handler(lambda m: m.text == "2. –ü—Ä–∏–¥–±–∞—Ç–∏ —á–∞–π")
async def buy_tea(message: types.Message):
    await message.answer("–û–±–µ—Ä—ñ—Ç—å –∫–∞—Ç–µ–≥–æ—Ä—ñ—é —á–∞—é:", reply_markup=tea_menu)

@dp.message_handler(lambda m: m.text == "3. –ê–Ω–æ–Ω—Å –ø–æ–¥—ñ–π")
async def events(message: types.Message):
    await message.answer("üìÖ –ù–∞–π–±–ª–∏–∂—á—ñ –ø–æ–¥—ñ—ó:\n‚Ä¢ 12.09 ‚Äî –¶–µ—Ä–µ–º–æ–Ω—ñ—è –£–ª—É–Ω\n‚Ä¢ 20.09 ‚Äî –ù—ñ—á –±—ñ–ª–∏—Ö —á–∞—ó–≤")

@dp.message_handler(lambda m: m.text == "4. –©–æ —Ç–∞–∫–µ —á–∞–π–Ω–∏–π –¥—ñ–º")
async def about(message: types.Message):
    await message.answer("–ß–∞–π–Ω–∏–π –¥—ñ–º ¬´–†–∏—Ç—É–∞–ª¬ª ‚Äî –ø—Ä–æ—Å—Ç—ñ—Ä —Ç–∏—à—ñ —Ç–∞ —Å–ø–æ–≥–ª—è–¥–∞–Ω–Ω—è ‚òØÔ∏è")

@dp.message_handler(lambda m: m.text == "‚¨ÖÔ∏è –ù–∞–∑–∞–¥")
async def back(message: types.Message):
    await message.answer("–ü–æ–≤–µ—Ä—Ç–∞—î–º–æ—Å—å —É –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é:", reply_markup=main_menu)

# --- –ó–∞–ø—É—Å–∫ ---
if name == "__main__":
    executor.start_polling(dp, skip_updates=True)
